<UserControl x:Class="wcs.window.DictionCtl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:wcs.window"
             xmlns:hc="https://handyorg.github.io/handycontrol" 
             xmlns:local1="clr-namespace:wcs.ViewModel.platform"
             mc:Ignorable="d"   Background="{DynamicResource RegionBrush}"
             DataContext="{Binding Dic,Source={StaticResource Locator}}"
             d:DesignHeight="450" d:DesignWidth="800">

    <hc:TransitioningContentControl>
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" MinWidth="300"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid>
                <ComboBox ItemsSource="{Binding Source={StaticResource DictionTypeE}}" Margin="10"
                          SelectedItem="{Binding TYPE,Mode=TwoWay}"/>
            </Grid>
            <DataGrid Grid.Row="1" Grid.Column="0" FontSize="20" RowHeaderWidth="60"  hc:DataGridAttach.ShowRowNumber="True"
                      SelectedItem="{Binding DictionSelected}" ItemsSource="{Binding DictionList}"
                      SelectionUnit="FullRow" SelectionMode="Single"
                      CanUserAddRows="False" CanUserResizeColumns="False"
                      CanUserDeleteRows="False" CanUserSortColumns="False"
                      CanUserReorderColumns="False" AutoGenerateColumns="False" IsReadOnly="True">
                <hc:Interaction.Triggers>
                    <hc:EventTrigger EventName="SelectionChanged">
                        <hc:EventToCommand Command="{Binding DictionSelectedChangeCmd}"/>
                    </hc:EventTrigger>
                </hc:Interaction.Triggers>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="刷新" Tag="refresh" Command="{Binding DictionEditCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}" />
                        <MenuItem Header="添加" Tag="add" Command="{Binding DictionEditCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}"/>
                        <MenuItem Header="修改" Tag="edit" Command="{Binding DictionEditCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding name}" Header="名称"/>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="0" Grid.Column="1" Margin="10" Orientation="Horizontal">
                <Button Content="添加值" Margin="5" IsEnabled="{Binding ISADDENABLE}" Style="{StaticResource ButtonPrimary}" hc:IconElement.Geometry="{StaticResource AddGeometry}" 
                        Tag="AddDicDtl" Command="{Binding DictionDtlEditeCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}"/>
                <Button Content="修改值" Margin="5" IsEnabled="{Binding ISEDITEENABLE}" Style="{StaticResource ButtonWarning}" hc:IconElement.Geometry="{StaticResource EditeGeometry}" 
                        Tag="EditDicDtl" Command="{Binding DictionDtlEditeCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}"/>
                <Button Content="删除值" Margin="5" IsEnabled="{Binding ISDELETEENABLE}" Style="{StaticResource ButtonDanger}" hc:IconElement.Geometry="{StaticResource DeleteGeometry}" 
                        Tag ="DeleteDicDtl" Command="{Binding DictionDtlEditeCmd}" CommandParameter="{Binding Tag,RelativeSource={RelativeSource Self}}"/>
            </StackPanel>
            <DataGrid Grid.Row="1" Grid.Column="1" Margin="5,0,0,0" FontSize="20" RowHeaderWidth="60"  hc:DataGridAttach.ShowRowNumber="True"
                      SelectedItem="{Binding DictionDtlSelected}" ItemsSource="{Binding DictionDtlList}"
                      SelectionUnit="FullRow" SelectionMode="Single"
                      CanUserAddRows="False" CanUserResizeColumns="False"
                      CanUserDeleteRows="False" CanUserSortColumns="False"
                      CanUserReorderColumns="False" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Resources>
                    <local1:BindingProxy x:Key="proxy" Data="{Binding}" />
                </DataGrid.Resources>
                <hc:Interaction.Triggers>
                    <hc:EventTrigger EventName="SelectionChanged">
                        <hc:EventToCommand Command="{Binding DictionDtlSelectedChangeCmd}"/>
                    </hc:EventTrigger>
                </hc:Interaction.Triggers>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="名称" Binding="{Binding name}" Width="2*">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding int_value}" Header="数据" Visibility="{Binding Data.IntVis, Converter={StaticResource Boolean2VisibilityConverter}, Source={StaticResource proxy}}" Width="*"/>
                    <DataGridTemplateColumn Visibility="{Binding Data.BoolVis, Converter={StaticResource Boolean2VisibilityConverter}, Source={StaticResource proxy}}" Width="*">
                        <DataGridTemplateColumn.Header>
                            <TextBlock Text="数据"/>
                        </DataGridTemplateColumn.Header>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Margin="5,5,5,5">
                                    <Border Width="30" Height="30"  CornerRadius="10" BorderThickness="1" BorderBrush="Transparent">
                                        <Ellipse Width="25" Height="25" Fill="Transparent" StrokeThickness="1" Stroke="{DynamicResource BorderBrush}"/>
                                    </Border>
                                    <Border Width="30" Height="30" CornerRadius="4" BorderThickness="1" BorderBrush="Transparent"
                                            Visibility="{Binding bool_value,Converter={StaticResource Boolean2VisibilityConverter}}">
                                        <Ellipse Width="25" Height="25" Fill="{DynamicResource DarkSuccessBrush}" StrokeThickness="1" Stroke="{DynamicResource BorderBrush}"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding string_value}" Header="数据" Visibility="{Binding Data.StringVis, Converter={StaticResource Boolean2VisibilityConverter}, Source={StaticResource proxy}}" Width="*"/>
                    <DataGridTextColumn Binding="{Binding double_value}" Header="数据"  Visibility="{Binding Data.DoubleVis, Converter={StaticResource Boolean2VisibilityConverter}, Source={StaticResource proxy}}"  Width="*"/>
                    <DataGridTextColumn Binding="{Binding uint_value}" Header="数据"  Visibility="{Binding Data.UIntVis, Converter={StaticResource Boolean2VisibilityConverter}, Source={StaticResource proxy}}" Width="*" />
                    <DataGridTextColumn Binding="{Binding order}" Header="顺序" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </hc:TransitioningContentControl>
</UserControl>
